name: Check and export

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Setup
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v4
        with:
          version: "0.5.6"
          enable-cache: true
      - uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"
      - run: uv sync
      - uses: typst-community/setup-typst@v3
        with:
          typst-version: 0.12
      - name: Install fd
        run: |
          npm install -g fd-find

      # Both typst and matplotlib require a proper font
      - name: Install the font
        # It installs NotoSansCJK-*.ttc, but matplotlib only supports the first font, i.e. JP.
        # https://github.com/matplotlib/matplotlib/issues/3135#issuecomment-1169521565
        run: |
          sudo apt install -y fonts-noto-cjk
          sed 's/Source Han Serif CN/Noto Serif CJK JP/' matplotlibrc --in-place
      - name: Check fonts
        run: |
          echo '[typst fonts]'
          typst fonts

          echo '[matplotlib fonts]'
          uv run python << EOF
          from matplotlib.font_manager import fontManager
          print(*sorted(f.name for f in fontManager.ttflist), sep="\n")
          EOF

          echo '[matplotlib test]'
          uv run python << EOF
          from io import BytesIO
          from matplotlib import pyplot as plt

          fig, ax = plt.subplots()
          ax.text(0.5, 0.5, "There are 几个汉字 in between")
          temp = BytesIO()
          fig.savefig(temp)
          EOF

      # Check
      - name: Ruff format
        run: uv run ruff format --check
      - name: Ruff check
        run: uv run ruff check --output-format=github .

      # Export
      - name: Marimo export HTML
        run: |
          mkdir html/
          fd '^[0-9]' --extension py --exec uv run marimo export html '{}' --output 'html/{.}.html'
      - uses: actions/upload-artifact@v4
        with:
          name: notebook-html
          path: html/
      - uses: actions/upload-pages-artifact@v3
        with:
          path: html/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
